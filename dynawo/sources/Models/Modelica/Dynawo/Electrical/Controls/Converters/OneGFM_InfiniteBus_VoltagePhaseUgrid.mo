within Dynawo.Electrical.Controls.Converters;

model OneGFM_InfiniteBus_VoltagePhaseUgrid
  parameter Types.ActivePowerPu PRefLoadPu = 0.1 "Active power request for the load in pu (base SnRef)";
  parameter Types.ReactivePowerPu QRefLoadPu = 0 "Reactive power request for the load in pu (base SnRef)";
 
  
  // /*====== GFM =======*/
  /*Inputs*/
  parameter Real SNom=SystemBase.SnRef * 2.5;
  parameter Complex i0Pu = Complex(0, 0) "Start value of the complex current at ACPower PCC connection in pu (base UNom,SNom)";
  parameter Complex u0Pu = Complex(0.99, 0) "Start value of the complex voltage at ACPower PCC connection in pu (base UNom)";
  parameter Real PRef0Pu = 0 "start value of the reference active power (SRef, UNom)";
  parameter Real QRef0Pu = 0 "start-value of the reactive power reference  input (base UNom, SNom) (generator convention) ";
  parameter Real UFilterRef0Pu = 1 "start-value of the module voltage reference to be reached after the RLC filter connection point (base UNom, SNom)";
  /*RLConnection*/
  parameter Real idPcc0Pu = 0 "Start value of the d-axis current at the grid connection point in pu (base UNom, SNom) (generator convention)";
  parameter Real iqPcc0Pu = 0 "Start value of the q-axis current at the grid connection point in pu (base UNom, SNom) (generator convention)";
  parameter Real omega0Pu = 1 "Start value of the angular reference frequency for the VSC system(omega) ";
  parameter Real udFilter0Pu = 0.99 "Start value of the d-axis voltage after the RLC filter in pu (base UNom, SNom)";
  parameter Real uqFilter0Pu = 0 "Start value of the q-axis voltage after the RLC filter in pu (base UNom, SNom)";
  parameter Real udPcc0Pu = 0.99 "Start value of the q-axis voltage at the grid connection point in pu (base UNom, SNom)";
  parameter Real uqPcc0Pu = 0 "Start value of the d-axis voltage at the grid connection point in pu (base UNom, SNom)";
  /*Measurement Pcc*/
  parameter Real PGen0Pu = 0 "Start value of active power generated by the converter at the PCC in pu (base UNom, SnRef) (generator convention)";
  parameter Real QGen0Pu = 0 "Start value of reactive power generated by the converter at the PCC in pu (base UNom, SnRef) (generator convention)";
  parameter Real UPolar0Pu = 0.99 "Start value of voltage angle at ACPower PCC connection in rad";
  parameter Real UPolarPhase0 = 0 "Start value of voltage module at ACPower PCC connection in pu (base UNom)";
  parameter Real theta0 = 0 "Start value of phase shift between the converter's rotating frame and the grid rotating frame in rad";
  parameter Real PFilter0Pu = 0 "Active Power at the RLC filter point connection in pu (base UNom, SNom)";
  parameter Real QFilter0Pu = 0 "Reactive Power at the RLC filter point connection in pu (base UNom, SNom)";
  parameter Real idConv0Pu = 0 "d-axis currrent at the inverter bridge output in pu (base UNom, SNom) (generator convention)";
  parameter Real iqConv0Pu = 0.06 "q-axis currrent at the inverter bridge output in pu (base UNom, SNom) (generator convention)";
  parameter Real udConv0Pu = 0.98 "The d-axis voltage at the inverter bridge output in pu (base UNom, SNom)";
  parameter Real uqConv0Pu = 0 "The q-axis voltage at the inverter bridge output in pu (base UNom, SNom)";
  /*VoltageFilterControl*/
  parameter Real idConvRef0Pu = 0.01 "Start value of the d-axis current reference injected by the converter in pu (base UNom, SNom) (generator convention)";
  parameter Real iqConvRef0Pu = 0.06 "Start value of the q-axis current reference injected by the converter in pu (base UNom, SNom) (generator convention)";
  parameter Real udFilterRef0Pu = 1 "Start value of the d-axis voltage reference after the RLC filter in pu (base UNom, SNom)";
  parameter Real uqFilterRef0Pu = 0 "Start value of the q-axis voltage reference after the RLC filter in pu (base UNom, SNom)";
  /*VoltageFilterReference*/
  parameter Real DeltaVVId0 = 0 "d-axis delta voltage virtual impedance (base UNom, SNom)";
  parameter Real DeltaVVIq0 = 0 "q-axis delta voltage virtual impedance (base UNom, SNom)";
  parameter Real QMesure0Pu = 0 "start-value of the reactive power mesured (base UNom, SNom) (generator convention)";
  //VirtualImpedance
  parameter Real RVI0 = 0.02 "Start value of virtual resistance in pu (base UNom, SNom)";
  parameter Real XVI0 = 0.21 "Start value of virtual reactance in pu (base UNom, SNom)";
  //CurrentSaturation
  parameter Real CurrentModule0 = 0.06 "start value of the Module of the current in dq representation idConvPu,iqConvPu";
  parameter Real CurrentAngle0 = 1.57 "start value of the Phase Angle of the current in dq representation idConvPu,iqConvPu";
  parameter Real idConvSatRef0Pu = 0 "start value of the satured-value of id";
  parameter Real iqConvSatRef0Pu = 0.06 "start value of the satured-value of iq";
  /*CurrentFilterLoop*/
  parameter Real udConvRef0Pu = 0.98 "d-axis voltage reference at the inverter bridge output in pu (base UNom, SNom)";
  parameter Real uqConvRef0Pu = 0 "q-axis voltage reference at the inverter bridge output in pu (base UNom, SNom)";
  //Droop Controls
  parameter Real omegaPLL0Pu = 1 "start value of PLL Frequency  in pu (base omegaNom)";
  parameter Real omegaRef0Pu = 1 "start value of frequency system reference in pu (base omegaNom)";
  parameter Real PMesure0Pu = 0 "start value of the active power mesured, base (SRef, UNom) ";
  parameter Real omegaSetSelected0Pu = 1 "start value of the angular frequency selected";
  /*Grid Measurement*/
  Types.PerUnit IgridModule "module of the current at the PCC point";
  /*ENTSOE Report Measurements*/
  Real DeltaPtheoric "DeltaP at the PCC point after the event";
  Real PSteadyState "P at the PCC point before the event in steady state ";
  Real Ptheoric "P at the PCC point calculated theoretically ";
  Real Thau;
  parameter Types.Time tOmegaEvtEnd = 5.001;
  parameter Types.Time tOmegaEvtStart= 5 ;
  Real Xeff=0.25 "Xeffective to be set";
  Real Udut "Tension at the DUT output ";
  Real Uinv "Tension at the converter output ";
 
  // Define a discrete variable to store the previous value
  //Real previousValue(start=0);
  
  Dynawo.Electrical.Controls.Converters.DroopControlV3 GFM(CurrentAngle0 = CurrentAngle0, CurrentModule0 = CurrentModule0, DeltaVVId0 = DeltaVVId0, DeltaVVIq0 = DeltaVVIq0, Fsw = 5000, LTransformer = 0.0001, Mq = 0, PFilter0Pu = PFilter0Pu, PGen0Pu = PGen0Pu, PMesure0Pu = PMesure0Pu, PRef0Pu = PRef0Pu, QFilter0Pu = QFilter0Pu, QGen0Pu = QGen0Pu, QMesure0Pu = QMesure0Pu, QRef0Pu = QRef0Pu, RTransformer = 0.0001, RVI0 = RVI0, SNom = SystemBase.SnRef * 1.2, UFilterRef0Pu = UFilterRef0Pu, UPolar0Pu = UPolar0Pu, UPolarPhase0 = UPolarPhase0, Wref_FromPLL = true, XVI0 = XVI0, i0Pu = i0Pu, idConv0Pu = idConv0Pu, idConvRef0Pu = idConvRef0Pu, idConvSatRef0Pu = idConvSatRef0Pu, idPcc0Pu = idPcc0Pu, iqConv0Pu = iqConv0Pu, iqConvRef0Pu = iqConvRef0Pu, iqConvSatRef0Pu = iqConvSatRef0Pu, iqPcc0Pu = iqPcc0Pu, omega0Pu = omega0Pu, omegaPLL0Pu = omegaPLL0Pu, omegaRef0Pu = omegaRef0Pu, omegaSetSelected0Pu = omegaSetSelected0Pu, theta0 = theta0, u0Pu = u0Pu, udConv0Pu = udConv0Pu, udConvRef0Pu = udConvRef0Pu, udFilter0Pu = udFilter0Pu, udFilterRef0Pu = udFilterRef0Pu, udPcc0Pu = udPcc0Pu, uqConv0Pu = uqConv0Pu, uqConvRef0Pu = uqConvRef0Pu, uqFilter0Pu = uqFilter0Pu, uqFilterRef0Pu = uqFilterRef0Pu, uqPcc0Pu = uqPcc0Pu) annotation(
    Placement(visible = true, transformation(origin = {-22, 46}, extent = {{-32, -32}, {32, 32}}, rotation = 0)));
  Modelica.Blocks.Sources.Step Qref(height = 0, offset = 0, startTime = 10) annotation(
    Placement(visible = true, transformation(origin = {-130, 72}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Step Uref(height = 0, offset = 1, startTime = 0) annotation(
    Placement(visible = true, transformation(origin = {-130, 38}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Step Pref(height = -0.7, offset = 0.9, startTime = 15) annotation(
    Placement(visible = true, transformation(origin = {-130, -2}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Dynawo.Electrical.Lines.Line line(BPu = 0.00003, GPu = 0, RPu = 0.083, XPu = 0.83) annotation(
    Placement(visible = true, transformation(origin = {94, -42}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Step step(height = 1, offset = 0, startTime = 0) annotation(
    Placement(visible = true, transformation(origin = {-130, -36}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Dynawo.Electrical.Buses.InfiniteBusWithVariations BusInfinite(U0Pu = 1, UEvtPu = 1, UPhase = 0, omega0Pu = 1, omegaEvtPu = 1.3, tOmegaEvtEnd = tOmegaEvtEnd, tOmegaEvtStart = tOmegaEvtStart, tUEvtEnd = 100, tUEvtStart = 100)  annotation(
    Placement(visible = true, transformation(origin = {-46, -66}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  line.switchOffSignal1.value = false;
  line.switchOffSignal2.value = false;
  GFM.switchOffSignal1.value = false;
  GFM.switchOffSignal2.value = false;
  GFM.switchOffSignal3.value = false;
// PSteadyState =
// Frequency variation
  if time > tOmegaEvtStart  then
// PSteadyState = pre(PSteadyState)+ GFM.measurementPcc.idPccPu;
      PSteadyState=0.934;
      Ptheoric=-DeltaPtheoric*exp((time-tOmegaEvtStart)*Thau)+PSteadyState;    
   // DeltaPtheoric=0;
   else
     PSteadyState=0.934;
     Ptheoric=PSteadyState;    
  end if ;

  DeltaPtheoric=(sin(BusInfinite.UPhaseOffs))/(Xeff);  // PSteadyState= pre(PSteadyState);
  Udut = sqrt(GFM.VSC.udFilterPu*GFM.VSC.udFilterPu+GFM.VSC.uqFilterPu*GFM.VSC.uqFilterPu);
  Uinv= sqrt(GFM.VSC.udConvPu*GFM.VSC.udConvPu+GFM.VSC.uqConvPu*GFM.VSC.uqConvPu);
  
  
  Thau=-(GFM.droopControl.Mp)*2*3.14*50/Xeff;
  IgridModule = Modelica.ComplexMath.'abs'(line.terminal2.i);
  
  connect(Qref.y, GFM.QrefPu) annotation(
    Line(points = {{-119, 72}, {-60, 72}}, color = {0, 0, 127}));
  connect(Pref.y, GFM.PrefPu) annotation(
    Line(points = {{-119, -2}, {-94, -2}, {-94, 46}, {-58, 46}}, color = {0, 0, 127}));
  connect(GFM.PCC, line.terminal2) annotation(
    Line(points = {{16, 48}, {104, 48}, {104, -42}}, color = {0, 0, 255}));
  connect(step.y, GFM.OmegaRefPu) annotation(
    Line(points = {{-119, -36}, {-88, -36}, {-88, 30}, {-58, 30}}, color = {0, 0, 127}));
  connect(Uref.y, GFM.UFilterRefPu) annotation(
    Line(points = {{-118, 38}, {-110, 38}, {-110, 60}, {-60, 60}}, color = {0, 0, 127}));
 connect(BusInfinite.terminal, line.terminal1) annotation(
    Line(points = {{-46, -66}, {84, -66}, {84, -42}}, color = {0, 0, 255}));
  annotation(
    Diagram(coordinateSystem(extent = {{-160, 100}, {200, -80}})),
    experiment(StartTime = 0, StopTime = 30, Tolerance = 1e-06, Interval = 0.001));
end OneGFM_InfiniteBus_VoltagePhaseUgrid;